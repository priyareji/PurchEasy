{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/91799/Documents/project/PURCHeasy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { forwardRef, EventEmitter } from '@angular/core';\nimport Cropper from 'cropperjs';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { slide } from '@app/shared/animations/slide.animate';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../utilities/services/functions.service\";\nimport * as i2 from \"@app/shared/services/global-function.service\";\nimport * as i3 from \"@app/shared/services/locale.service\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/platform-browser\";\nimport * as i6 from \"@app/app-initializer.service\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/flex-layout/extended\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"../addons/help-line/help-line.component\";\nimport * as i12 from \"@angular/material/slider\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@angular/material/tooltip\";\n\nfunction ImageCropComponent_mat_label_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    error: a0\n  };\n};\n\nfunction ImageCropComponent_mat_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-label\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ImageCropComponent_mat_label_3_span_2_Template, 2, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx_r0.control.errors && ctx_r0.control.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.field.fieldCaption, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.field == null ? null : ctx_r0.field.isRequired);\n  }\n}\n\nfunction ImageCropComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-help-line\", 17);\n    i0.ɵɵlistener(\"helpLineEmit\", function ImageCropComponent_ng_container_4_Template_app_help_line_helpLineEmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.helpLineData($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"helpLineData\", ctx_r1.field.helpLine);\n  }\n}\n\nfunction ImageCropComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"mat-slider\", 19);\n    i0.ɵɵlistener(\"input\", function ImageCropComponent_div_11_Template_mat_slider_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.zoomInOut($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 20);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r3.sliderValue);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.locale.translate(\"zoom_out\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.locale.translate(\"zoom_in\"));\n  }\n}\n\nfunction ImageCropComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.locale.translate(\"crop_image_desc\"), \" \");\n  }\n}\n\nfunction ImageCropComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function ImageCropComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.delete();\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 23);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImageCropComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ImageCropComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      i0.ɵɵnextContext();\n\n      const _r2 = i0.ɵɵreference(9);\n\n      return _r2.click();\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 25);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function () {\n  return {\n    colorFrom: \"rgba(0, 0, 0, 0.6)\",\n    translateFrom: \"translateY(20%)\",\n    inTime: \"200ms\"\n  };\n};\n\nconst _c2 = function (a1) {\n  return {\n    value: \"rightIn\",\n    params: a1\n  };\n};\n\nfunction ImageCropComponent_mat_hint_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@slide\", i0.ɵɵpureFunction1(3, _c2, i0.ɵɵpureFunction0(2, _c1)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.field.fieldHelpText, \"\");\n  }\n}\n\nconst _c3 = function () {\n  return {\n    colorFrom: \"#ff5722\",\n    translateFrom: \"translateY(20%)\",\n    inTime: \"200ms\"\n  };\n};\n\nfunction ImageCropComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-error\", 26);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@slide\", i0.ɵɵpureFunction1(3, _c2, i0.ɵɵpureFunction0(2, _c3)))(\"innerHtml\", ctx_r8.controlFunctions.validationMsg(ctx_r8.control, ctx_r8.field), i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c4 = function () {\n  return [null, undefined, \"\"];\n};\n\nconst _c5 = function (a0) {\n  return {\n    \"display\": a0\n  };\n};\n\nexport class ImageCropComponent {\n  constructor(controlFunctions, gfService, el, renderer2, locale, cdref, iconRegistry, sanitizer, preLoadService) {\n    this.controlFunctions = controlFunctions;\n    this.gfService = gfService;\n    this.el = el;\n    this.renderer2 = renderer2;\n    this.locale = locale;\n    this.cdref = cdref;\n    this.iconRegistry = iconRegistry;\n    this.sanitizer = sanitizer;\n    this.preLoadService = preLoadService;\n    this.helpLineEmit = new EventEmitter();\n    this.zoomValue = 0;\n    this.sliderValue = 0;\n    this.mouseZoomValue = 0;\n    this.detectMouseEvent = false;\n    this.loader = false;\n    this.ext = '';\n    iconRegistry.addSvgIcon('upload_icon', sanitizer.bypassSecurityTrustResourceUrl('/assets/svg/upload-icon.svg'));\n  }\n\n  ngOnInit() {\n    this.validateFn = validator(this.control.value, this.field);\n  }\n\n  validate(c) {\n    return this.validateFn(c);\n  }\n\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('field') && changes.field.currentValue) {\n      this.imageURL = changes.field.currentValue.value.imageSrc;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.initializeCropper();\n  }\n\n  initializeCropper() {\n    var _this = this;\n\n    const image = this.el.nativeElement.querySelector('.image-to-crop');\n    const cropperOptions = {\n      mageSmoothingEnabled: true,\n      imageSmoothingQuality: 'high',\n      responsive: true,\n      minContainerWidth: 100,\n      minContainerHeight: 100\n    };\n\n    if (this.field.additionalMetaData.hasOwnProperty('viewMode')) {\n      cropperOptions.viewMode = this.field.additionalMetaData.viewMode;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('restore')) {\n      cropperOptions.restore = this.field.additionalMetaData.restore;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('strict')) {\n      cropperOptions.strict = this.field.additionalMetaData.strict;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('center')) {\n      cropperOptions.center = this.field.additionalMetaData.center;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('highlight')) {\n      cropperOptions.highlight = this.field.additionalMetaData.highlight;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('guides')) {\n      cropperOptions.guides = this.field.additionalMetaData.guides;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('autoCropArea')) {\n      cropperOptions.autoCropArea = this.field.additionalMetaData.autoCropArea;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('dragCrop')) {\n      cropperOptions.dragCrop = this.field.additionalMetaData.dragCrop;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('cropBoxMovable')) {\n      cropperOptions.cropBoxMovable = this.field.additionalMetaData.cropBoxMovable;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('showBackground')) {\n      cropperOptions.background = this.field.additionalMetaData.showBackground;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('movable')) {\n      cropperOptions.movable = this.field.additionalMetaData.movable;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('zoom')) {\n      cropperOptions.zoom = this.field.additionalMetaData.zoom;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('zoomOnTounch')) {\n      cropperOptions.zoomOnTounch = this.field.additionalMetaData.zoomOnTounch;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('zoomOnWheel')) {\n      cropperOptions.zoomOnWheel = this.field.additionalMetaData.zoomOnWheel;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('cropBoxResizable')) {\n      cropperOptions.cropBoxResizable = this.field.additionalMetaData.cropBoxResizable;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('dragMode')) {\n      cropperOptions.dragMode = this.field.additionalMetaData.dragMode;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('toggleDragModeOnDblclick')) {\n      cropperOptions.toggleDragModeOnDblclick = this.field.additionalMetaData.toggleDragModeOnDblclick;\n    }\n\n    if (this.field.additionalMetaData.hasOwnProperty('dragType')) {\n      if (!this.field.additionalMetaData.hasOwnProperty('width') && !this.field.additionalMetaData.hasOwnProperty('height')) {\n        if (this.field.additionalMetaData.dragType === 'round') {\n          cropperOptions.aspectRatio = 1;\n        } else {\n          cropperOptions.aspectRatio = 16 / 9;\n        }\n      }\n    }\n\n    const cropBoxData = {};\n    const canvasOptions = {};\n\n    if (this.field.additionalMetaData) {\n      if (this.field.additionalMetaData.hasOwnProperty('left')) {\n        cropBoxData.left = this.field.additionalMetaData.left;\n      }\n\n      if (this.field.additionalMetaData.hasOwnProperty('top')) {\n        cropBoxData.top = this.field.additionalMetaData.top;\n      }\n\n      if (this.field.additionalMetaData.hasOwnProperty('width')) {\n        cropBoxData.width = this.field.additionalMetaData.width;\n        canvasOptions.width = this.field.additionalMetaData.width;\n      }\n\n      if (this.field.additionalMetaData.hasOwnProperty('height')) {\n        cropBoxData.height = this.field.additionalMetaData.height;\n        canvasOptions.height = this.field.additionalMetaData.height;\n      }\n    }\n\n    this.detectMouseEvent = true;\n    this.cropper = new Cropper(image, this.gfService.JSONMerge(cropperOptions, {\n      ready: function () {\n        var _ref = _asyncToGenerator(function* () {\n          const containerData = _this.cropper.getContainerData();\n\n          const canvasData = _this.cropper.getCanvasData();\n\n          const scope = _this;\n\n          if ('options' in _this.cropper) {\n            if ('viewMode' in _this.cropper['options'] && 'aspectRatio' in _this.cropper['options']) {\n              const limited = _this.cropper['options']['viewMode'] === 1 || _this.cropper['options']['viewMode'] === 2;\n              let maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n              let maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\n\n              if (_this.cropper['options']['aspectRatio']) {\n                if (maxCropBoxHeight * _this.cropper['options']['aspectRatio'] > maxCropBoxWidth) {\n                  maxCropBoxHeight = maxCropBoxWidth / _this.cropper['options']['aspectRatio'];\n                } else {\n                  maxCropBoxWidth = maxCropBoxHeight * _this.cropper['options']['aspectRatio'];\n                }\n              }\n\n              const actualWidth = cropBoxData.width;\n              const actualHeight = cropBoxData.height;\n              const maxWidth = Math.max(actualWidth, maxCropBoxWidth) < actualWidth ? Math.max(actualWidth, maxCropBoxWidth) : maxCropBoxWidth;\n              const maxHeight = Math.max(actualHeight, maxCropBoxHeight) < actualHeight ? Math.max(actualHeight, maxCropBoxHeight) : maxCropBoxHeight;\n              const minWidth = Math.min(actualWidth, maxCropBoxWidth) < actualWidth ? Math.min(actualWidth, maxCropBoxWidth) : maxCropBoxWidth;\n              const minHeight = Math.min(actualHeight, maxCropBoxHeight) < actualHeight ? Math.min(actualHeight, maxCropBoxHeight) : maxCropBoxHeight;\n\n              if (_this.field.additionalMetaData.hasOwnProperty('dragType') && _this.field.additionalMetaData.dragType === 'round' || cropperOptions.hasOwnProperty('aspectRatio') && cropperOptions.aspectRatio === 1 || actualWidth === actualHeight) {\n                cropBoxData.width = Math.min(maxWidth, maxHeight);\n                cropBoxData.height = Math.min(maxWidth, maxHeight);\n              } else if (_this.field.additionalMetaData.hasOwnProperty('width') && _this.field.additionalMetaData.hasOwnProperty('height')) {\n                let crtMinWidth = minWidth;\n                let crtMinHeight = minHeight;\n                let crtMaxWidth = maxWidth;\n                let crtMaxHeight = maxHeight;\n\n                if (actualWidth > actualHeight) {\n                  crtMinWidth = minHeight / (actualHeight / actualWidth);\n                  crtMinHeight = minWidth / (actualWidth / actualHeight);\n                }\n\n                if (actualWidth < actualHeight) {\n                  crtMaxWidth = maxHeight / (actualHeight / actualWidth);\n                  crtMaxHeight = maxWidth / (actualWidth / actualHeight);\n                }\n\n                cropBoxData.width = Math.min(crtMinWidth, crtMaxWidth);\n                cropBoxData.height = Math.min(crtMinHeight, crtMaxHeight);\n              }\n\n              if (_this.field.additionalMetaData.hasOwnProperty('dragType') && _this.field.additionalMetaData.dragType === 'round') {\n                const cropperContainer = _this.el.nativeElement.querySelector('.cropper-container');\n\n                if (cropperContainer) {\n                  _this.renderer2.addClass(cropperContainer, 'round');\n                }\n              }\n\n              if (Object.keys(cropBoxData).length > 0) {\n                scope.cropper.setCropBoxData(cropBoxData);\n              }\n\n              if (_this.imageURL) {\n                _this.setControlValue(canvasOptions);\n\n                const canvas = scope.cropper.getCanvasData();\n                _this.initialZoomData = canvas.width / canvas.naturalWidth; // if (this.field.value && this.field.value.zoomedValue) {\n                // \tthis.sliderValue = this.field.value.zoomedValue * 100 - this.initialZoomData;\n                // \tthis.cropper.zoomTo(this.field.value.zoomedValue);\n                // }\n              }\n            }\n          }\n        });\n\n        return function ready() {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      zoom: event => {\n        if (this.timeOut) {\n          clearTimeout(this.timeOut);\n        }\n\n        this.timeOut = setTimeout(() => {\n          this.setControlValue(canvasOptions);\n        }, this.preLoadService.configuration.zoomDelay);\n\n        if (!this.control.touched) {\n          this.control.markAsTouched();\n        }\n\n        if (this.detectMouseEvent && this.control.valid) {\n          const value = Number(event.detail.ratio.toFixed(2)) - Number(this.initialZoomData.toFixed(2));\n\n          if (value === Number(this.initialZoomData.toFixed(2))) {\n            this.sliderValue = 0;\n            this.zoomValue = 0;\n          } else {\n            if (event.detail.ratio > event.detail.oldRatio && value >= 1.56) {\n              if (value > 1.56 && this.sliderValue >= 150) {\n                event.preventDefault();\n                event.stopPropagation();\n                return false;\n              }\n\n              this.sliderValue = 150;\n              this.zoomValue = 150 / 100;\n            }\n\n            this.sliderValue = Number((value * 100).toFixed(2));\n            this.zoomValue = this.sliderValue / 100;\n\n            if (this.sliderValue > 150) {\n              this.sliderValue = 150;\n              this.zoomValue = 150 / 100;\n            } else if (Math.sign(this.sliderValue) === -1) {\n              this.sliderValue = 0;\n              this.zoomValue = 0;\n            }\n          } // const containerData = this.cropper.getCropBoxData();\n          // const centerX = containerData.width / 2;\n          // const centerY = containerData.height / 2;\n          // console.log(this.cropper.getData(), this.cropper.getImageData(), this.cropper.getCroppedCanvas(), this.cropper.getContainerData());\n          // this.zoomedValue = this.sliderValue / 100 + this.initialZoomData;\n\n        }\n      },\n      crop: function () {\n        var _ref2 = _asyncToGenerator(function* (event) {});\n\n        return function crop(_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      cropend: function () {\n        var _ref3 = _asyncToGenerator(function* (event) {\n          _this.setControlValue(canvasOptions);\n        });\n\n        return function cropend(_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    }));\n  }\n\n  setControlValue(canvasOptions) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let baseFile;\n      let file;\n\n      if (_this2.field.additionalMetaData.dragType === 'round') {\n        baseFile = _this2.getRoundedCanvas(_this2.cropper.getCroppedCanvas(canvasOptions)).toDataURL('image/png', 1.0);\n\n        if (_this2.field.additionalMetaData.dataUrl) {\n          file = baseFile;\n        } else {\n          file = yield _this2.srcToFile(baseFile, `${_this2.field.fieldColumn}.png`, 'image/png');\n        }\n      } else {\n        baseFile = _this2.cropper.getCroppedCanvas(canvasOptions).toDataURL('image/' + _this2.ext, 1.0);\n\n        if (_this2.field.additionalMetaData.dataUrl) {\n          file = baseFile;\n        } else {\n          file = yield _this2.srcToFile(baseFile, `${_this2.field.fieldColumn}.${_this2.ext}`, 'image/' + _this2.ext);\n        }\n      }\n\n      let controlValue = _this2.control.value;\n\n      if ([null, undefined, ''].includes(controlValue)) {\n        controlValue = {};\n      }\n\n      controlValue.croppedFile = file; // if (this.zoomedValue) {\n      // \tcontrolValue.zoomedValue = this.zoomedValue;\n      // }\n\n      _this2.control.patchValue(controlValue);\n    })();\n  }\n\n  onMousewheel(event) {\n    this.detectMouseEvent = true;\n  }\n\n  onResize() {\n    this.detectMouseEvent = true;\n    this.sliderValue = 0;\n    this.zoomValue = 0;\n  }\n\n  srcToFile(src, fileName, mimeType) {\n    return fetch(src).then(res => {\n      return res.arrayBuffer();\n    }).then(buf => {\n      return new File([buf], fileName, {\n        type: mimeType\n      });\n    });\n  }\n\n  zoomInOut(event) {\n    if (!this.control.touched) {\n      this.control.markAsTouched();\n    }\n\n    if (this.control.valid) {\n      this.detectMouseEvent = false;\n      this.sliderValue = event.value;\n      const value = event.value / 100 + this.initialZoomData;\n      const containerData = this.cropper.getCropBoxData();\n      const centerX = containerData.left + containerData.width / 2;\n      const centerY = containerData.top + containerData.height / 2;\n\n      if (value === 0) {\n        this.cropper.zoomTo(0);\n      } else {\n        this.zoomedValue = value;\n        this.cropper.zoomTo(value, {\n          x: centerX,\n          y: centerY\n        });\n      }\n\n      this.zoomValue = value;\n      this.detectMouseEvent = true;\n    }\n  }\n\n  upload(event) {\n    var _this3 = this;\n\n    const target = event.target;\n    const fileList = target.files;\n    const file = fileList[0];\n\n    if (!this.control.touched) {\n      this.control.markAsTouched();\n    }\n\n    if (file) {\n      this.loader = true;\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      const ext = file.name.substring(file.name.lastIndexOf('.') + 1).toLowerCase();\n      this.detectMouseEvent = true;\n      this.sliderValue = 0;\n      this.zoomValue = 0;\n      this.field.value.imageSrc = file.name;\n      let controlValue = this.control.value;\n\n      if ([null, undefined, ''].includes(controlValue)) {\n        controlValue = {};\n      }\n\n      if (typeof controlValue === 'object' && controlValue.hasOwnProperty('croppedFile')) {\n        delete controlValue.croppedFile;\n      }\n\n      controlValue.imageSrc = file.name;\n      this.control.patchValue(controlValue);\n      this.imageURL = '';\n\n      if (this.cropper) {\n        this.cropper.destroy();\n      }\n\n      reader.onload = /*#__PURE__*/_asyncToGenerator(function* () {\n        if (['jpg', 'jpeg', 'png'].includes(ext)) {\n          const result = reader.result;\n          _this3.imageURL = result;\n\n          _this3.cdref.detectChanges();\n\n          _this3.initializeCropper();\n        }\n\n        _this3.loader = false;\n      });\n    }\n  }\n\n  delete() {\n    this.imageURL = '';\n    this.sliderValue = 0;\n    this.zoomValue = 0;\n    this.detectMouseEvent = false;\n    this.control.patchValue(null);\n    this.cropper.destroy();\n  }\n\n  writeValue(value) {}\n\n  registerOnChange(fn) {}\n\n  registerOnTouched(fn) {}\n\n  getRoundedCanvas(sourceCanvas) {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n\n    if (context) {\n      const width = sourceCanvas.width;\n      const height = sourceCanvas.height;\n      canvas.width = width;\n      canvas.height = height;\n      context.imageSmoothingEnabled = true;\n      context.drawImage(sourceCanvas, 0, 0, width, height);\n      context.globalCompositeOperation = 'destination-in';\n      context.beginPath();\n      context.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI, true);\n      context.fill();\n    }\n\n    return canvas;\n  }\n  /**\r\n  * @desc Help line field change method\r\n  * @param object helpLineEmit - help line json data.\r\n  */\n\n\n  helpLineData(data) {\n    this.helpLineEmit.emit(data);\n  }\n\n}\n\nImageCropComponent.ɵfac = function ImageCropComponent_Factory(t) {\n  return new (t || ImageCropComponent)(i0.ɵɵdirectiveInject(i1.FunctionsService), i0.ɵɵdirectiveInject(i2.GlobalFunctionService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i3.LocaleService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i4.MatIconRegistry), i0.ɵɵdirectiveInject(i5.DomSanitizer), i0.ɵɵdirectiveInject(i6.AppInitService));\n};\n\nImageCropComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ImageCropComponent,\n  selectors: [[\"app-image-crop\"]],\n  hostBindings: function ImageCropComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousewheel\", function ImageCropComponent_mousewheel_HostBindingHandler($event) {\n        return ctx.onMousewheel($event);\n      })(\"resize\", function ImageCropComponent_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    field: \"field\",\n    control: \"control\"\n  },\n  outputs: {\n    helpLineEmit: \"helpLineEmit\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ImageCropComponent),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ImageCropComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 18,\n  vars: 16,\n  consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"start stretch\", 1, \"custom-field\", 3, \"id\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"start stretch\", 1, \"image-cropper\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"start start\"], [3, \"ngClass\", 4, \"ngIf\"], [4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"start stretch\", \"fxFlex\", \"1 1\", 1, \"cropper-block\"], [1, \"img-container\"], [1, \"image-to-crop\", 3, \"src\", \"ngStyle\"], [\"hidden\", \"\", \"type\", \"file\", \"accept\", \".jpg,.jpeg,.png\", 3, \"change\"], [\"uploader\", \"\"], [\"fxLayout\", \"row wrap\", \"fxLayoutAlign\", \"start center\", \"fxLayoutGap\", \"10px\"], [\"fxFlex\", \"1 1 auto\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"start center\", 4, \"ngIf\"], [\"fxFlex\", \"1 1 auto\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltip\", \"Remove image\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltip\", \"Upload image\", 3, \"click\", 4, \"ngIf\"], [3, \"innerHtml\", 4, \"ngIf\"], [3, \"ngClass\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"start start\", 3, \"helpLineData\", \"helpLineEmit\"], [\"fxFlex\", \"1 1 auto\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"start center\"], [\"max\", \"150\", 3, \"value\", \"input\"], [\"fxLayout\", \"row wrap\", \"fxFlexFill\", \"\", \"fxLayoutAlign\", \"space-between center\", \"fxLayoutGap\", \"10px\", 1, \"zoom-desc\"], [\"fxFlex\", \"1 1 auto\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltip\", \"Remove image\", 3, \"click\"], [\"svgIcon\", \"delete\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltip\", \"Upload image\", 3, \"click\"], [\"svgIcon\", \"upload_icon\"], [3, \"innerHtml\"]],\n  template: function ImageCropComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, ImageCropComponent_mat_label_3_Template, 3, 5, \"mat-label\", 3);\n      i0.ɵɵtemplate(4, ImageCropComponent_ng_container_4_Template, 2, 1, \"ng-container\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵelement(7, \"img\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 8, 9);\n      i0.ɵɵlistener(\"change\", function ImageCropComponent_Template_input_change_8_listener($event) {\n        return ctx.upload($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 10);\n      i0.ɵɵtemplate(11, ImageCropComponent_div_11_Template, 7, 3, \"div\", 11);\n      i0.ɵɵtemplate(12, ImageCropComponent_div_12_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementStart(13, \"div\", 10);\n      i0.ɵɵtemplate(14, ImageCropComponent_button_14_Template, 2, 0, \"button\", 13);\n      i0.ɵɵtemplate(15, ImageCropComponent_button_15_Template, 2, 0, \"button\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, ImageCropComponent_mat_hint_16_Template, 2, 5, \"mat-hint\", 4);\n      i0.ɵɵtemplate(17, ImageCropComponent_mat_error_17_Template, 1, 5, \"mat-error\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.field == null ? null : ctx.field.fieldColumn);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpureFunction0(11, _c4).includes(ctx.field.fieldCaption) && (ctx.field == null ? null : ctx.field.additionalMetaData == null ? null : ctx.field.additionalMetaData.showLabel));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.field == null ? null : ctx.field.helpLine == null ? null : ctx.field.helpLine.length);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"src\", ctx.imageURL, i0.ɵɵsanitizeUrl)(\"ngStyle\", i0.ɵɵpureFunction1(12, _c5, !ctx.imageURL ? \"none\" : \"\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", (ctx.field == null ? null : ctx.field.additionalMetaData == null ? null : ctx.field.additionalMetaData.zoom) && ctx.imageURL);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction0(14, _c4).includes(ctx.imageURL));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.imageURL && !ctx.field.isRequired);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.field == null ? null : ctx.field.additionalMetaData == null ? null : ctx.field.additionalMetaData.showUploadIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.control.untouched || ctx.control.valid) && !i0.ɵɵpureFunction0(15, _c4).includes(ctx.field.fieldHelpText));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.errors && ctx.control.touched);\n    }\n  },\n  directives: [i7.DefaultLayoutDirective, i7.DefaultLayoutAlignDirective, i8.NgIf, i7.DefaultFlexDirective, i8.NgStyle, i9.DefaultStyleDirective, i7.DefaultLayoutGapDirective, i10.MatLabel, i8.NgClass, i9.DefaultClassDirective, i11.HelpLineComponent, i12.MatSlider, i7.FlexFillDirective, i13.MatButton, i14.MatTooltip, i4.MatIcon, i10.MatHint, i10.MatError],\n  styles: [\"[_nghost-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.custom-field[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%] {\\n  padding-bottom: 1.5em;\\n  position: relative;\\n  margin-bottom: 5px;\\n  box-sizing: border-box;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   mat-label.error[_ngcontent-%COMP%] {\\n  color: #ff5722;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   app-help-line[_ngcontent-%COMP%] {\\n  padding: 0 5px;\\n  margin: 0;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]     mat-slider {\\n  height: 20px;\\n  padding: 0;\\n  width: 95%;\\n  margin: 0 auto;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]     mat-slider .mat-slider-wrapper {\\n  top: 47%;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]   .zoom-desc[_ngcontent-%COMP%] {\\n  font-size: 10px;\\n  line-height: 14px;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]   mat-hint[_ngcontent-%COMP%] {\\n  margin-top: 8px;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]   mat-error[_ngcontent-%COMP%] {\\n  margin-top: 8px;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]   .mat-error[_ngcontent-%COMP%] {\\n  font-size: 0.8em;\\n  position: absolute;\\n  bottom: 5px;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]   .img-container[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  height: 100%;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]   .img-container[_ngcontent-%COMP%]   .image-to-crop[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 100%;\\n  max-height: 400px;\\n}\\n\\n.custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]     .round .cropper-view-box, .custom-field[_ngcontent-%COMP%]   .image-cropper[_ngcontent-%COMP%]   .cropper-block[_ngcontent-%COMP%]     .round .cropper-face {\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLWNyb3AuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDQyxXQUFBO0VBQ0EsWUFBQTtBQUZEOztBQUlBO0VBQ0MsWUFBQTtBQUREOztBQUVDO0VBQ0MscUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUFGOztBQUdHO0VBQ0MsY0FBQTtBQURKOztBQUtFO0VBQ0MsY0FBQTtFQUNBLFNBQUE7QUFISDs7QUFNRTtFQUNDLFlBQUE7QUFKSDs7QUFLRztFQUNDLFlBQUE7RUFDQSxVQUFBO0VBQ0EsVUFBQTtFQUNBLGNBQUE7QUFISjs7QUFJSTtFQUNDLFFBQUE7QUFGTDs7QUFNRztFQUNDLGVBQUE7RUFDQSxpQkFBQTtBQUpKOztBQU9HO0VBQ0MsZUFBQTtBQUxKOztBQVFHO0VBQ0MsZUFBQTtBQU5KOztBQVNHO0VBQ0MsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFQSjs7QUFTRztFQUNDLGVBQUE7RUFDQSxZQUFBO0FBUEo7O0FBUUk7RUFDQyxXQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FBTkw7O0FBVUk7O0VBRUMsa0JBQUE7QUFSTCIsImZpbGUiOiJpbWFnZS1jcm9wLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGltcG9ydCBcInJldXNhYmxlXCI7XG5AaW1wb3J0IFwibWl4aW5zXCI7XG5cbjpob3N0IHtcblx0d2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMTAwJTtcbn1cbi5jdXN0b20tZmllbGQge1xuXHRoZWlnaHQ6IDEwMCU7XG5cdC5pbWFnZS1jcm9wcGVyIHtcblx0XHRwYWRkaW5nLWJvdHRvbTogMS41ZW07XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGhlaWdodDogMTAwJTtcblxuXHRcdG1hdC1sYWJlbCB7XG5cdFx0XHQmLmVycm9yIHtcblx0XHRcdFx0Y29sb3I6ICNmZjU3MjI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0YXBwLWhlbHAtbGluZSB7XG5cdFx0XHRwYWRkaW5nOiAwIDVweDtcblx0XHRcdG1hcmdpbjogMDtcblx0XHR9XG5cblx0XHQuY3JvcHBlci1ibG9jayB7XG5cdFx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0XHQ6Om5nLWRlZXAgbWF0LXNsaWRlciB7XG5cdFx0XHRcdGhlaWdodDogMjBweDtcblx0XHRcdFx0cGFkZGluZzogMDtcblx0XHRcdFx0d2lkdGg6IDk1JTtcblx0XHRcdFx0bWFyZ2luOiAwIGF1dG87XG5cdFx0XHRcdC5tYXQtc2xpZGVyLXdyYXBwZXIge1xuXHRcdFx0XHRcdHRvcDogNDclO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC56b29tLWRlc2Mge1xuXHRcdFx0XHRmb250LXNpemU6IDEwcHg7XG5cdFx0XHRcdGxpbmUtaGVpZ2h0OiAxNHB4O1xuXHRcdFx0fVxuXG5cdFx0XHRtYXQtaGludCB7XG5cdFx0XHRcdG1hcmdpbi10b3A6IDhweDtcblx0XHRcdH1cblxuXHRcdFx0bWF0LWVycm9yIHtcblx0XHRcdFx0bWFyZ2luLXRvcDogOHB4O1xuXHRcdFx0fVxuXG5cdFx0XHQubWF0LWVycm9yIHtcblx0XHRcdFx0Zm9udC1zaXplOiAwLjhlbTtcblx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0XHRib3R0b206IDVweDtcblx0XHRcdH1cblx0XHRcdC5pbWctY29udGFpbmVyIHtcblx0XHRcdFx0bWF4LXdpZHRoOiAxMDAlO1xuXHRcdFx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0XHRcdC5pbWFnZS10by1jcm9wIHtcblx0XHRcdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdFx0XHRtYXgtd2lkdGg6IDEwMCU7XG5cdFx0XHRcdFx0bWF4LWhlaWdodDogNDAwcHg7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdDo6bmctZGVlcCAucm91bmQge1xuXHRcdFx0XHQuY3JvcHBlci12aWV3LWJveCxcblx0XHRcdFx0LmNyb3BwZXItZmFjZSB7XG5cdFx0XHRcdFx0Ym9yZGVyLXJhZGl1czogNTAlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdDo6bmctZGVlcCAuY3JvcHBlci1jb250YWluZXIge1xuXHRcdFx0XHQvLyAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG5cdFx0XHRcdC8vICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG4iXX0= */\"],\n  data: {\n    animation: [slide]\n  }\n});\nexport function validator(value, field) {\n  return function validateFileRange(control) {\n    if (field.isRequired || !field.isRequired && control.value !== null) {\n      if (control.value === null || [null, undefined, ''].includes(control.value.imageSrc)) {\n        this.control.setErrors({\n          error: {\n            msg: this.locale.translate('image_source_required')\n          }\n        });\n        return {\n          incorrect: {\n            msg: this.locale.translate('image_source_required')\n          }\n        };\n      } else {\n        if (control.value.imageSrc.lastIndexOf(';base64,') > 0) {\n          const mimeString = control.value.imageSrc.split(',')[0].split(':')[1].split(';')[0];\n          this.ext = mimeString.substring(mimeString.lastIndexOf('/') + 1);\n        } else {\n          this.ext = control.value.imageSrc.substring(control.value.imageSrc.lastIndexOf('.') + 1);\n        }\n\n        if (!['jpg', 'jpeg', 'png'].includes(this.ext)) {\n          return {\n            file: {\n              allowedExtension: 'jpg, jpeg, png',\n              givenExtension: this.ext,\n              message: this.locale.translate('invalid_file_format')\n            }\n          };\n        }\n      }\n    }\n\n    return null;\n  };\n}","map":{"version":3,"sources":["C:\\Users\\91799\\Documents\\project\\PURCHeasy\\src\\app\\components\\controls\\image-crop\\image-crop.component.ts","C:\\Users\\91799\\Documents\\project\\PURCHeasy\\src\\app\\components\\controls\\image-crop\\image-crop.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tOnInit,\n\tAfterViewInit,\n\tInput,\n\tHostListener,\n\tforwardRef,\n\tOnChanges,\n\tElementRef,\n\tRenderer2,\n\tChangeDetectorRef,\n\tOutput,\n\tEventEmitter,\n\tSimpleChanges\n} from '@angular/core';\nimport Cropper from 'cropperjs';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS } from '@angular/forms';\nimport { ImageCropModel } from '../utilities/models/image-crop-model';\nimport { FunctionsService } from '../utilities/services/functions.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { GlobalFunctionService } from '@app/shared/services/global-function.service';\nimport { AppInitService } from '@app/app-initializer.service';\nimport { LocaleService } from '@app/shared/services/locale.service';\nimport { slide } from '@app/shared/animations/slide.animate';\n\n@Component({\n\tselector: 'app-image-crop',\n\ttemplateUrl: './image-crop.component.html',\n\tstyleUrls: ['./image-crop.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => ImageCropComponent),\n\t\t\tmulti: true\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tuseExisting: forwardRef(() => ImageCropComponent),\n\t\t\tmulti: true\n\t\t}\n\t],\n\tanimations: [slide]\n})\nexport class ImageCropComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnChanges {\n\t/**\n\t * @desc Angular Input Decorator - Common Parameters\n\t * @param object field - file upload field data.\n\t * @param formControl control - file upload control.\n\t */\n\t@Input() field!: ImageCropModel;\n\t@Input() control!: FormControl;\n\n\t@Output() helpLineEmit = new EventEmitter();\n\n\tprivate cropper!: Cropper;\n\tzoomValue = 0;\n\tsliderValue = 0;\n\tmouseZoomValue = 0;\n\tdetectMouseEvent = false;\n\timageURL?: string;\n\tloader = false;\n\tvalidateFn!: (file: any) => void;\n\text: string = '';\n\tinitialZoomData: any;\n\ttimeOut: any;\n\tzoomedValue?: number;\n\n\tconstructor(\n\t\tpublic controlFunctions: FunctionsService,\n\t\tpublic gfService: GlobalFunctionService,\n\t\tprivate el: ElementRef,\n\t\tprivate renderer2: Renderer2,\n\t\tpublic locale: LocaleService,\n\t\tprivate cdref: ChangeDetectorRef,\n\t\tprivate iconRegistry: MatIconRegistry,\n\t\tprivate sanitizer: DomSanitizer,\n\t\tprivate preLoadService: AppInitService\n\t) {\n\t\ticonRegistry.addSvgIcon('upload_icon', sanitizer.bypassSecurityTrustResourceUrl('/assets/svg/upload-icon.svg'));\n\t}\n\n\tngOnInit() {\n\t\tthis.validateFn = validator(this.control.value, this.field);\n\t}\n\n\tvalidate(c: FormControl) {\n\t\treturn this.validateFn(c);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.hasOwnProperty('field') && changes.field.currentValue) {\n\t\t\tthis.imageURL = changes.field.currentValue.value.imageSrc;\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.initializeCropper();\n\t}\n\n\tinitializeCropper() {\n\t\tconst image = this.el.nativeElement.querySelector('.image-to-crop') as HTMLImageElement;\n\t\tconst cropperOptions: any = {\n\t\t\tmageSmoothingEnabled: true,\n\t\t\timageSmoothingQuality: 'high',\n\t\t\tresponsive: true,\n\t\t\tminContainerWidth: 100,\n\t\t\tminContainerHeight: 100\n\t\t};\n\t\tif (this.field.additionalMetaData.hasOwnProperty('viewMode')) {\n\t\t\tcropperOptions.viewMode = this.field.additionalMetaData.viewMode;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('restore')) {\n\t\t\tcropperOptions.restore = this.field.additionalMetaData.restore;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('strict')) {\n\t\t\tcropperOptions.strict = this.field.additionalMetaData.strict;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('center')) {\n\t\t\tcropperOptions.center = this.field.additionalMetaData.center;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('highlight')) {\n\t\t\tcropperOptions.highlight = this.field.additionalMetaData.highlight;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('guides')) {\n\t\t\tcropperOptions.guides = this.field.additionalMetaData.guides;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('autoCropArea')) {\n\t\t\tcropperOptions.autoCropArea = this.field.additionalMetaData.autoCropArea;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('dragCrop')) {\n\t\t\tcropperOptions.dragCrop = this.field.additionalMetaData.dragCrop;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('cropBoxMovable')) {\n\t\t\tcropperOptions.cropBoxMovable = this.field.additionalMetaData.cropBoxMovable;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('showBackground')) {\n\t\t\tcropperOptions.background = this.field.additionalMetaData.showBackground;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('movable')) {\n\t\t\tcropperOptions.movable = this.field.additionalMetaData.movable;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('zoom')) {\n\t\t\tcropperOptions.zoom = this.field.additionalMetaData.zoom;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('zoomOnTounch')) {\n\t\t\tcropperOptions.zoomOnTounch = this.field.additionalMetaData.zoomOnTounch;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('zoomOnWheel')) {\n\t\t\tcropperOptions.zoomOnWheel = this.field.additionalMetaData.zoomOnWheel;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('cropBoxResizable')) {\n\t\t\tcropperOptions.cropBoxResizable = this.field.additionalMetaData.cropBoxResizable;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('dragMode')) {\n\t\t\tcropperOptions.dragMode = this.field.additionalMetaData.dragMode;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('toggleDragModeOnDblclick')) {\n\t\t\tcropperOptions.toggleDragModeOnDblclick = this.field.additionalMetaData.toggleDragModeOnDblclick;\n\t\t}\n\t\tif (this.field.additionalMetaData.hasOwnProperty('dragType')) {\n\t\t\tif (\n\t\t\t\t!this.field.additionalMetaData.hasOwnProperty('width') &&\n\t\t\t\t!this.field.additionalMetaData.hasOwnProperty('height')\n\t\t\t) {\n\t\t\t\tif (this.field.additionalMetaData.dragType === 'round') {\n\t\t\t\t\tcropperOptions.aspectRatio = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcropperOptions.aspectRatio = 16 / 9;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst cropBoxData: any = {};\n\t\tconst canvasOptions: any = {};\n\t\tif (this.field.additionalMetaData) {\n\t\t\tif (this.field.additionalMetaData.hasOwnProperty('left')) {\n\t\t\t\tcropBoxData.left = this.field.additionalMetaData.left;\n\t\t\t}\n\t\t\tif (this.field.additionalMetaData.hasOwnProperty('top')) {\n\t\t\t\tcropBoxData.top = this.field.additionalMetaData.top;\n\t\t\t}\n\t\t\tif (this.field.additionalMetaData.hasOwnProperty('width')) {\n\t\t\t\tcropBoxData.width = this.field.additionalMetaData.width;\n\t\t\t\tcanvasOptions.width = this.field.additionalMetaData.width;\n\t\t\t}\n\t\t\tif (this.field.additionalMetaData.hasOwnProperty('height')) {\n\t\t\t\tcropBoxData.height = this.field.additionalMetaData.height;\n\t\t\t\tcanvasOptions.height = this.field.additionalMetaData.height;\n\t\t\t}\n\t\t}\n\t\tthis.detectMouseEvent = true;\n\t\tthis.cropper = new Cropper(\n\t\t\timage,\n\t\t\tthis.gfService.JSONMerge(cropperOptions, {\n\t\t\t\tready: async () => {\n\t\t\t\t\tconst containerData = this.cropper.getContainerData();\n\t\t\t\t\tconst canvasData = this.cropper.getCanvasData();\n\t\t\t\t\tconst scope = this;\n\t\t\t\t\tif ('options' in this.cropper) {\n\t\t\t\t\t\tif ('viewMode' in this.cropper['options'] && 'aspectRatio' in this.cropper['options']) {\n\t\t\t\t\t\t\tconst limited = this.cropper['options']['viewMode'] === 1 || this.cropper['options']['viewMode'] === 2;\n\t\t\t\t\t\t\tlet maxCropBoxWidth = Math.min(\n\t\t\t\t\t\t\t\tcontainerData.width,\n\t\t\t\t\t\t\t\tlimited ? canvasData.width : containerData.width\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tlet maxCropBoxHeight = Math.min(\n\t\t\t\t\t\t\t\tcontainerData.height,\n\t\t\t\t\t\t\t\tlimited ? canvasData.height : containerData.height\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (this.cropper['options']['aspectRatio']) {\n\t\t\t\t\t\t\t\tif (maxCropBoxHeight * this.cropper['options']['aspectRatio'] > maxCropBoxWidth) {\n\t\t\t\t\t\t\t\t\tmaxCropBoxHeight = maxCropBoxWidth / this.cropper['options']['aspectRatio'];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmaxCropBoxWidth = maxCropBoxHeight * this.cropper['options']['aspectRatio'];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst actualWidth = cropBoxData.width;\n\t\t\t\t\t\t\tconst actualHeight = cropBoxData.height;\n\t\t\t\t\t\t\tconst maxWidth =\n\t\t\t\t\t\t\t\tMath.max(actualWidth, maxCropBoxWidth) < actualWidth\n\t\t\t\t\t\t\t\t\t? Math.max(actualWidth, maxCropBoxWidth)\n\t\t\t\t\t\t\t\t\t: maxCropBoxWidth;\n\t\t\t\t\t\t\tconst maxHeight =\n\t\t\t\t\t\t\t\tMath.max(actualHeight, maxCropBoxHeight) < actualHeight\n\t\t\t\t\t\t\t\t\t? Math.max(actualHeight, maxCropBoxHeight)\n\t\t\t\t\t\t\t\t\t: maxCropBoxHeight;\n\t\t\t\t\t\t\tconst minWidth =\n\t\t\t\t\t\t\t\tMath.min(actualWidth, maxCropBoxWidth) < actualWidth\n\t\t\t\t\t\t\t\t\t? Math.min(actualWidth, maxCropBoxWidth)\n\t\t\t\t\t\t\t\t\t: maxCropBoxWidth;\n\t\t\t\t\t\t\tconst minHeight =\n\t\t\t\t\t\t\t\tMath.min(actualHeight, maxCropBoxHeight) < actualHeight\n\t\t\t\t\t\t\t\t\t? Math.min(actualHeight, maxCropBoxHeight)\n\t\t\t\t\t\t\t\t\t: maxCropBoxHeight;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(this.field.additionalMetaData.hasOwnProperty('dragType') &&\n\t\t\t\t\t\t\t\t\tthis.field.additionalMetaData.dragType === 'round') ||\n\t\t\t\t\t\t\t\t(cropperOptions.hasOwnProperty('aspectRatio') && cropperOptions.aspectRatio === 1) ||\n\t\t\t\t\t\t\t\tactualWidth === actualHeight\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcropBoxData.width = Math.min(maxWidth, maxHeight);\n\t\t\t\t\t\t\t\tcropBoxData.height = Math.min(maxWidth, maxHeight);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tthis.field.additionalMetaData.hasOwnProperty('width') &&\n\t\t\t\t\t\t\t\tthis.field.additionalMetaData.hasOwnProperty('height')\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlet crtMinWidth = minWidth;\n\t\t\t\t\t\t\t\tlet crtMinHeight = minHeight;\n\t\t\t\t\t\t\t\tlet crtMaxWidth = maxWidth;\n\t\t\t\t\t\t\t\tlet crtMaxHeight = maxHeight;\n\t\t\t\t\t\t\t\tif (actualWidth > actualHeight) {\n\t\t\t\t\t\t\t\t\tcrtMinWidth = minHeight / (actualHeight / actualWidth);\n\t\t\t\t\t\t\t\t\tcrtMinHeight = minWidth / (actualWidth / actualHeight);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (actualWidth < actualHeight) {\n\t\t\t\t\t\t\t\t\tcrtMaxWidth = maxHeight / (actualHeight / actualWidth);\n\t\t\t\t\t\t\t\t\tcrtMaxHeight = maxWidth / (actualWidth / actualHeight);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcropBoxData.width = Math.min(crtMinWidth, crtMaxWidth);\n\t\t\t\t\t\t\t\tcropBoxData.height = Math.min(crtMinHeight, crtMaxHeight);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis.field.additionalMetaData.hasOwnProperty('dragType') &&\n\t\t\t\t\t\t\t\tthis.field.additionalMetaData.dragType === 'round'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst cropperContainer: HTMLDivElement = this.el.nativeElement.querySelector(\n\t\t\t\t\t\t\t\t\t'.cropper-container'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (cropperContainer) {\n\t\t\t\t\t\t\t\t\tthis.renderer2.addClass(cropperContainer, 'round');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Object.keys(cropBoxData).length > 0) {\n\t\t\t\t\t\t\t\tscope.cropper.setCropBoxData(cropBoxData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this.imageURL) {\n\t\t\t\t\t\t\t\tthis.setControlValue(canvasOptions);\n\t\t\t\t\t\t\t\tconst canvas = scope.cropper.getCanvasData();\n\t\t\t\t\t\t\t\tthis.initialZoomData = canvas.width / canvas.naturalWidth;\n\t\t\t\t\t\t\t\t// if (this.field.value && this.field.value.zoomedValue) {\n\t\t\t\t\t\t\t\t// \tthis.sliderValue = this.field.value.zoomedValue * 100 - this.initialZoomData;\n\t\t\t\t\t\t\t\t// \tthis.cropper.zoomTo(this.field.value.zoomedValue);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tzoom: (event: any): boolean | void => {\n\t\t\t\t\tif (this.timeOut) {\n\t\t\t\t\t\tclearTimeout(this.timeOut);\n\t\t\t\t\t}\n\t\t\t\t\tthis.timeOut = setTimeout(() => {\n\t\t\t\t\t\tthis.setControlValue(canvasOptions);\n\t\t\t\t\t}, this.preLoadService.configuration.zoomDelay);\n\t\t\t\t\tif (!this.control.touched) {\n\t\t\t\t\t\tthis.control.markAsTouched();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.detectMouseEvent && this.control.valid) {\n\t\t\t\t\t\tconst value = Number(event.detail.ratio.toFixed(2)) - Number(this.initialZoomData.toFixed(2));\n\t\t\t\t\t\tif (value === Number(this.initialZoomData.toFixed(2))) {\n\t\t\t\t\t\t\tthis.sliderValue = 0;\n\t\t\t\t\t\t\tthis.zoomValue = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (event.detail.ratio > event.detail.oldRatio && value >= 1.56) {\n\t\t\t\t\t\t\t\tif (value > 1.56 && this.sliderValue >= 150) {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.sliderValue = 150;\n\t\t\t\t\t\t\t\tthis.zoomValue = 150 / 100;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.sliderValue = Number((value * 100).toFixed(2));\n\t\t\t\t\t\t\tthis.zoomValue = this.sliderValue / 100;\n\n\t\t\t\t\t\t\tif (this.sliderValue > 150) {\n\t\t\t\t\t\t\t\tthis.sliderValue = 150;\n\t\t\t\t\t\t\t\tthis.zoomValue = 150 / 100;\n\t\t\t\t\t\t\t} else if (Math.sign(this.sliderValue) === -1) {\n\t\t\t\t\t\t\t\tthis.sliderValue = 0;\n\t\t\t\t\t\t\t\tthis.zoomValue = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// const containerData = this.cropper.getCropBoxData();\n\t\t\t\t\t\t// const centerX = containerData.width / 2;\n\t\t\t\t\t\t// const centerY = containerData.height / 2;\n\t\t\t\t\t\t// console.log(this.cropper.getData(), this.cropper.getImageData(), this.cropper.getCroppedCanvas(), this.cropper.getContainerData());\n\t\t\t\t\t\t// this.zoomedValue = this.sliderValue / 100 + this.initialZoomData;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcrop: async (event: any) => { },\n\t\t\t\tcropend: async (event: any) => {\n\t\t\t\t\tthis.setControlValue(canvasOptions);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tasync setControlValue(canvasOptions: any) {\n\t\tlet baseFile;\n\t\tlet file;\n\t\tif (this.field.additionalMetaData.dragType === 'round') {\n\t\t\tbaseFile = this.getRoundedCanvas(this.cropper.getCroppedCanvas(canvasOptions)).toDataURL('image/png', 1.0);\n\t\t\tif (this.field.additionalMetaData.dataUrl) {\n\t\t\t\tfile = baseFile;\n\t\t\t} else {\n\t\t\t\tfile = await this.srcToFile(baseFile, `${this.field.fieldColumn}.png`, 'image/png');\n\t\t\t}\n\t\t} else {\n\t\t\tbaseFile = this.cropper.getCroppedCanvas(canvasOptions).toDataURL('image/' + this.ext, 1.0);\n\t\t\tif (this.field.additionalMetaData.dataUrl) {\n\t\t\t\tfile = baseFile;\n\t\t\t} else {\n\t\t\t\tfile = await this.srcToFile(baseFile, `${this.field.fieldColumn}.${this.ext}`, 'image/' + this.ext);\n\t\t\t}\n\t\t}\n\t\tlet controlValue = this.control.value;\n\t\tif ([null, undefined, ''].includes(controlValue)) {\n\t\t\tcontrolValue = {};\n\t\t}\n\t\tcontrolValue.croppedFile = file;\n\t\t// if (this.zoomedValue) {\n\t\t// \tcontrolValue.zoomedValue = this.zoomedValue;\n\t\t// }\n\t\tthis.control.patchValue(controlValue);\n\t}\n\n\t@HostListener('mousewheel', ['$event'])\n\tonMousewheel(event: any) {\n\t\tthis.detectMouseEvent = true;\n\t}\n\n\t@HostListener('window:resize', ['$event'])\n\tonResize() {\n\t\tthis.detectMouseEvent = true;\n\t\tthis.sliderValue = 0;\n\t\tthis.zoomValue = 0;\n\t}\n\n\tsrcToFile(src: any, fileName: string, mimeType: any) {\n\t\treturn fetch(src)\n\t\t\t.then((res) => {\n\t\t\t\treturn res.arrayBuffer();\n\t\t\t})\n\t\t\t.then((buf) => {\n\t\t\t\treturn new File([buf], fileName, { type: mimeType });\n\t\t\t});\n\t}\n\n\tzoomInOut(event: any) {\n\t\tif (!this.control.touched) {\n\t\t\tthis.control.markAsTouched();\n\t\t}\n\t\tif (this.control.valid) {\n\t\t\tthis.detectMouseEvent = false;\n\t\t\tthis.sliderValue = event.value;\n\t\t\tconst value = event.value / 100 + this.initialZoomData;\n\t\t\tconst containerData = this.cropper.getCropBoxData();\n\t\t\tconst centerX = containerData.left + containerData.width / 2;\n\t\t\tconst centerY = containerData.top + containerData.height / 2;\n\t\t\tif (value === 0) {\n\t\t\t\tthis.cropper.zoomTo(0);\n\t\t\t} else {\n\t\t\t\tthis.zoomedValue = value;\n\t\t\t\tthis.cropper.zoomTo(value, { x: centerX, y: centerY });\n\t\t\t}\n\t\t\tthis.zoomValue = value;\n\t\t\tthis.detectMouseEvent = true;\n\t\t}\n\t}\n\n\tupload(event: any) {\n\t\tconst target = event.target;\n\t\tconst fileList: FileList = target.files;\n\t\tconst file: File = fileList[0];\n\t\tif (!this.control.touched) {\n\t\t\tthis.control.markAsTouched();\n\t\t}\n\t\tif (file) {\n\t\t\tthis.loader = true;\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsDataURL(file);\n\t\t\tconst ext = file.name.substring(file.name.lastIndexOf('.') + 1).toLowerCase();\n\t\t\tthis.detectMouseEvent = true;\n\t\t\tthis.sliderValue = 0;\n\t\t\tthis.zoomValue = 0;\n\t\t\tthis.field.value.imageSrc = file.name;\n\t\t\tlet controlValue = this.control.value;\n\t\t\tif ([null, undefined, ''].includes(controlValue)) {\n\t\t\t\tcontrolValue = {};\n\t\t\t}\n\t\t\tif (typeof controlValue === 'object' && controlValue.hasOwnProperty('croppedFile')) {\n\t\t\t\tdelete controlValue.croppedFile;\n\t\t\t}\n\t\t\tcontrolValue.imageSrc = file.name;\n\t\t\tthis.control.patchValue(controlValue);\n\t\t\tthis.imageURL = '';\n\t\t\tif (this.cropper) {\n\t\t\t\tthis.cropper.destroy();\n\t\t\t}\n\t\t\treader.onload = async () => {\n\t\t\t\tif (['jpg', 'jpeg', 'png'].includes(ext)) {\n\t\t\t\t\tconst result: any = reader.result;\n\t\t\t\t\tthis.imageURL = result;\n\t\t\t\t\tthis.cdref.detectChanges();\n\t\t\t\t\tthis.initializeCropper();\n\t\t\t\t}\n\t\t\t\tthis.loader = false;\n\t\t\t};\n\t\t}\n\t}\n\n\tdelete() {\n\t\tthis.imageURL = '';\n\t\tthis.sliderValue = 0;\n\t\tthis.zoomValue = 0;\n\t\tthis.detectMouseEvent = false;\n\t\tthis.control.patchValue(null);\n\t\tthis.cropper.destroy();\n\t}\n\n\twriteValue(value: null) { }\n\n\tregisterOnChange(fn: () => void) { }\n\n\tregisterOnTouched(fn: () => void) { }\n\n\tgetRoundedCanvas(sourceCanvas: any) {\n\t\tconst canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\tconst context: CanvasRenderingContext2D | null = canvas.getContext('2d');\n\t\tif (context) {\n\t\t\tconst width: number = sourceCanvas.width;\n\t\t\tconst height: number = sourceCanvas.height;\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t\tcontext.imageSmoothingEnabled = true;\n\t\t\tcontext.drawImage(sourceCanvas, 0, 0, width, height);\n\t\t\tcontext.globalCompositeOperation = 'destination-in';\n\t\t\tcontext.beginPath();\n\t\t\tcontext.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI, true);\n\t\t\tcontext.fill();\n\t\t}\n\t\treturn canvas;\n\t}\n\n\t/**\n * @desc Help line field change method\n * @param object helpLineEmit - help line json data.\n */\n\thelpLineData(data: any) {\n\t\tthis.helpLineEmit.emit(data);\n\t}\n}\n\nexport function validator(value: any, field: any) {\n\treturn function validateFileRange(control: FormControl) {\n\t\tif (field.isRequired || (!field.isRequired && control.value !== null)) {\n\t\t\tif (control.value === null || [null, undefined, ''].includes(control.value.imageSrc)) {\n\t\t\t\tthis.control.setErrors({ error: { msg: this.locale.translate('image_source_required') } });\n\t\t\t\treturn {\n\t\t\t\t\tincorrect: {\n\t\t\t\t\t\tmsg: this.locale.translate('image_source_required')\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (control.value.imageSrc.lastIndexOf(';base64,') > 0) {\n\t\t\t\t\tconst mimeString = control.value.imageSrc.split(',')[0].split(':')[1].split(';')[0];\n\t\t\t\t\tthis.ext = mimeString.substring(mimeString.lastIndexOf('/') + 1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.ext = control.value.imageSrc.substring(control.value.imageSrc.lastIndexOf('.') + 1);\n\t\t\t\t}\n\t\t\t\tif (!['jpg', 'jpeg', 'png'].includes(this.ext)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\tallowedExtension: 'jpg, jpeg, png',\n\t\t\t\t\t\t\tgivenExtension: this.ext,\n\t\t\t\t\t\t\tmessage: this.locale.translate('invalid_file_format')\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n","<div class=\"custom-field\" [id]=\"field?.fieldColumn\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n\t<div class=\"image-cropper\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n\t\t\t<mat-label [ngClass]=\"{error: (control.errors && control.touched)}\"\n\t\t\t\t*ngIf=\"![null, undefined, ''].includes(field.fieldCaption) && field?.additionalMetaData?.showLabel\">\n\t\t\t\t{{field.fieldCaption}} <span *ngIf=\"field?.isRequired\">*</span></mat-label>\n\t\t\t<ng-container *ngIf=\"field?.helpLine?.length\">\n\t\t\t\t<app-help-line [helpLineData]=\"field.helpLine\" fxLayout=\"row\" fxLayoutAlign=\"start start\"\n\t\t\t\t\t(helpLineEmit)=\"helpLineData($event)\"></app-help-line>\n\t\t\t</ng-container>\n\t\t</div>\n\t\t<div class=\"cropper-block\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex=\"1 1\">\n\t\t\t<div class=\"img-container\">\n\t\t\t\t<img class=\"image-to-crop\" [src]=\"imageURL\" [ngStyle]=\"{'display': (!imageURL) ? 'none' : ''}\">\n\t\t\t</div>\n\t\t\t<input hidden type=\"file\" accept=\".jpg,.jpeg,.png\" #uploader (change)=\"upload($event)\" />\n\t\t\t<div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n\t\t\t\t<div fxFlex=\"1 1 auto\" *ngIf=\"field?.additionalMetaData?.zoom && imageURL\" fxLayout=\"column\"\n\t\t\t\t\tfxLayoutAlign=\"start center\">\n\t\t\t\t\t<mat-slider (input)=\"zoomInOut($event)\" max=\"150\" [value]=\"sliderValue\"></mat-slider>\n\t\t\t\t\t<div fxLayout=\"row wrap\" class=\"zoom-desc\" fxFlexFill fxLayoutAlign=\"space-between center\" fxLayoutGap=\"10px\">\n\t\t\t\t\t\t<span>{{ locale.translate('zoom_out') }}</span>\n\t\t\t\t\t\t<span>{{ locale.translate('zoom_in') }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div fxFlex=\"1 1 auto\" *ngIf=\"[null, undefined, ''].includes(imageURL)\">\n\t\t\t\t\t{{ locale.translate('crop_image_desc') }}\n\t\t\t\t</div>\n\t\t\t\t<div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n\t\t\t\t\t<button mat-icon-button *ngIf=\"imageURL && !field.isRequired\" (click)=\"delete()\" type=\"button\"\n\t\t\t\t\t\tmatTooltip=\"Remove image\">\n\t\t\t\t\t\t<mat-icon svgIcon=\"delete\"></mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button mat-icon-button (click)=\"uploader.click()\" type=\"button\" matTooltip=\"Upload image\"\n\t\t\t\t\t\t*ngIf=\"field?.additionalMetaData?.showUploadIcon\">\n\t\t\t\t\t\t<mat-icon svgIcon=\"upload_icon\"></mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<mat-hint *ngIf=\"(control.untouched || control.valid) && ![null, undefined, ''].includes(field.fieldHelpText)\"\n\t\t\t\t[@slide]=\"{ value: 'rightIn', params: { colorFrom:'rgba(0, 0, 0, 0.6)', translateFrom: 'translateY(20%)',inTime:'200ms' }}\">\n\t\t\t\t{{field.fieldHelpText}}</mat-hint>\n\t\t\t<mat-error *ngIf=\"control.errors && control.touched\"\n\t\t\t\t[@slide]=\"{ value: 'rightIn', params: { colorFrom:'#ff5722', translateFrom: 'translateY(20%)',inTime:'200ms' }}\"\n\t\t\t\t[innerHtml]=\"controlFunctions.validationMsg(control, field)\">\n\t\t\t</mat-error>\n\t\t</div>\n\t</div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}