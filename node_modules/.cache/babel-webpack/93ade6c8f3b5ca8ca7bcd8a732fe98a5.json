{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/91799/Documents/project/PURCHeasy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LocaleService {\n  constructor(http) {\n    this.http = http;\n    this.localeContent = {};\n    this.localeChangeDetect = new Subject();\n  }\n\n  translate(key) {\n    return this.localeContent[key] || 'UNKNOWN';\n  }\n\n  switchLanguage(lang) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.localeChangeDetect.next(true);\n\n      const language = yield _this.loadFile(`assets/locale/${lang}.json`);\n      _this.localeContent = language.content;\n\n      _this.localeChangeDetect.next(false);\n    })();\n  }\n\n  loadFile(file) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.http.get(file).toPromise();\n    })();\n  }\n\n}\n\nLocaleService.ɵfac = function LocaleService_Factory(t) {\n  return new (t || LocaleService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nLocaleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LocaleService,\n  factory: LocaleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\91799\\Documents\\project\\PURCHeasy\\src\\app\\shared\\services\\locale.service.ts"],"names":[],"mappings":";AAEA,SAAS,OAAT,QAAwB,MAAxB;;;AAKA,OAAM,MAAO,aAAP,CAAoB;AAIzB,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AAHpB,SAAA,aAAA,GAAqB,EAArB;AACA,SAAA,kBAAA,GAAqB,IAAI,OAAJ,EAArB;AAEyC;;AAEzC,EAAA,SAAS,CAAC,GAAD,EAAY;AACpB,WAAO,KAAK,aAAL,CAAmB,GAAnB,KAA2B,SAAlC;AACA;;AAEK,EAAA,cAAc,CAAC,IAAD,EAAa;AAAA;;AAAA;AAChC,MAAA,KAAI,CAAC,kBAAL,CAAwB,IAAxB,CAA6B,IAA7B;;AACA,YAAM,QAAQ,SAAS,KAAI,CAAC,QAAL,CAAc,iBAAiB,IAAI,OAAnC,CAAvB;AACA,MAAA,KAAI,CAAC,aAAL,GAAqB,QAAQ,CAAC,OAA9B;;AACA,MAAA,KAAI,CAAC,kBAAL,CAAwB,IAAxB,CAA6B,KAA7B;AAJgC;AAKhC;;AAEK,EAAA,QAAQ,CAAC,IAAD,EAAa;AAAA;;AAAA;AAC1B,aAAO,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,IAAd,EAAoB,SAApB,EAAP;AAD0B;AAE1B;;AAnBwB;;;mBAAb,a,EAAa,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAb,a;AAAa,EAAA,OAAA,EAAb,aAAa,CAAA,I;AAAA,EAAA,UAAA,EAFb","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LocaleService {\n\tlocaleContent: any = {};\n\tlocaleChangeDetect = new Subject<boolean>();\n\n\tconstructor(private http: HttpClient) { }\n\n\ttranslate(key: string) {\n\t\treturn this.localeContent[key] || 'UNKNOWN';\n\t}\n\n\tasync switchLanguage(lang: string) {\n\t\tthis.localeChangeDetect.next(true);\n\t\tconst language = await this.loadFile(`assets/locale/${lang}.json`);\n\t\tthis.localeContent = language.content;\n\t\tthis.localeChangeDetect.next(false);\n\t}\n\n\tasync loadFile(file: string): Promise<any> {\n\t\treturn this.http.get(file).toPromise();\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}