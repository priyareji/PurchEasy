{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/91799/Documents/project/PURCHeasy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { isDevMode } from '@angular/core';\nimport Configurations from '../configuration.json';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./shared/services/locale.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nexport class AppInitService {\n  constructor(http, locale, snackBar) {\n    this.http = http;\n    this.locale = locale;\n    this.snackBar = snackBar;\n    this.configuration = Configurations.configuration;\n    this.sessionUser = null;\n  }\n\n  preLoad() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let canReload = false;\n\n      if (navigator.onLine) {\n        const config = yield _this.loadFile('/configuration.json');\n        _this.configuration = config.configuration;\n\n        if (_this.getCookie('token') && _this.sessionUser === null) {\n          yield _this.setSessionUser(); // await this.getMenuData();\n          // await this.getPermissionData();\n        }\n\n        let localeContent = localStorage.getItem('languageData');\n\n        if (localeContent) {\n          localeContent = JSON.parse(localeContent);\n        }\n\n        if (sessionStorage.getItem('locale')) {\n          const language = yield _this.loadFile(`/assets/locale/${sessionStorage.getItem('locale')}.json`);\n          localeContent = language.content;\n        } else {\n          const language = yield _this.loadFile(`/assets/locale/en.json`);\n          localeContent = language.content;\n        }\n\n        if (localeContent) {\n          _this.locale.localeContent = localeContent;\n        }\n\n        localStorage.setItem('languageData', JSON.stringify(localeContent));\n      } else {\n        let localeContent = localStorage.getItem('languageData');\n\n        if (localeContent) {\n          localeContent = JSON.parse(localeContent);\n          _this.locale.localeContent = localeContent;\n        }\n\n        canReload = true;\n\n        _this.snackBar.open('You are offline', '', {\n          duration: 172800000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top'\n        });\n      }\n\n      addEventListener('online', /*#__PURE__*/_asyncToGenerator(function* () {\n        // if (canReload) {\n        _this.snackBar.dismiss();\n\n        if (!isDevMode() && ([null, undefined].includes(_this.configuration) || [null, undefined].includes(_this.locale))) {\n          window.location.reload();\n        } // }\n\n      }));\n    })();\n  }\n\n  loadFile(file) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.http.get(file).toPromise();\n    })();\n  }\n\n  setSessionUser() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const apiData = {};\n        const headers = {};\n        const response = yield _this3.loadUser(apiData, headers);\n        _this3.sessionUser = response;\n        _this3.sessionUser.name = `${_this3.sessionUser.profile.firstName}${_this3.sessionUser.profile.lastName ? ' ' + _this3.sessionUser.profile.lastName : ''}`;\n        _this3.sessionUser.lastLoginTime = null; // this.sessionUser = { name: 'test', userID: 1, firstName: 'test', lastName: 'test' };\n      } catch (error) {}\n    })();\n  }\n\n  loadUser(params = {}, headers = {}) {\n    const token = this.getCookie('token');\n\n    if (token) {\n      headers.token = token;\n    } // headers = this.JSONMerge(headers, this.headers);\n\n\n    const api = this.configuration.API_URL + '' + this.configuration.API_PREFIX + `authentication/usersessiondetails`;\n    const options = {\n      headers: new HttpHeaders(headers),\n      params\n    };\n    return this.http.get(api, options).toPromise();\n  }\n\n  getCookie(name) {\n    try {\n      const ca = decodeURIComponent(document.cookie).split(';');\n      const caLen = ca.length;\n      const cookieName = `${name}=`;\n      let c;\n\n      for (let i = 0; i < caLen; i += 1) {\n        c = ca[i].replace(/^\\s+/g, '');\n\n        if (c.indexOf(cookieName) === 0) {\n          const returnData = c.substring(cookieName.length, c.length);\n\n          if (returnData) {\n            if (this.isJson(returnData)) {\n              return JSON.parse(returnData);\n            }\n\n            return returnData;\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  isJson(item) {\n    item = typeof item !== 'string' ? JSON.stringify(item) : item;\n\n    try {\n      item = JSON.parse(item);\n    } catch (e) {\n      // console.error(e);\n      return false;\n    }\n\n    if (typeof item === 'object' && item !== null) {\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nAppInitService.ɵfac = function AppInitService_Factory(t) {\n  return new (t || AppInitService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocaleService), i0.ɵɵinject(i3.MatSnackBar));\n};\n\nAppInitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppInitService,\n  factory: AppInitService.ɵfac\n});","map":{"version":3,"sources":["C:\\Users\\91799\\Documents\\project\\PURCHeasy\\src\\app\\app-initializer.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, isDevMode } from '@angular/core';\nimport Configurations from '../configuration.json';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LocaleService } from './shared/services/locale.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class AppInitService {\n\tconfiguration = Configurations.configuration;\n\tsessionUser = null;\n\n\tconstructor(\n\t\tprivate http: HttpClient,\n\t\tprivate locale: LocaleService,\n\t\tprivate snackBar: MatSnackBar\n\t) { }\n\n\tasync preLoad() {\n\n\t\tlet canReload = false;\n\t\tif (navigator.onLine) {\n\t\t\tconst config = await this.loadFile('/configuration.json');\n\t\t\tthis.configuration = config.configuration;\n\t\t\tif (this.getCookie('token') && this.sessionUser === null) {\n\t\t\t\tawait this.setSessionUser();\n\t\t\t\t// await this.getMenuData();\n\t\t\t\t// await this.getPermissionData();\n\t\t\t}\n\t\t\tlet localeContent = localStorage.getItem('languageData');\n\t\t\tif (localeContent) {\n\t\t\t\tlocaleContent = JSON.parse(localeContent);\n\t\t\t}\n\t\t\tif (sessionStorage.getItem('locale')) {\n\t\t\t\tconst language = await this.loadFile(`/assets/locale/${sessionStorage.getItem('locale')}.json`);\n\t\t\t\tlocaleContent = language.content;\n\t\t\t} else {\n\t\t\t\tconst language = await this.loadFile(`/assets/locale/en.json`);\n\t\t\t\tlocaleContent = language.content;\n\t\t\t}\n\t\t\tif (localeContent) {\n\t\t\t\tthis.locale.localeContent = localeContent;\n\t\t\t}\n\t\t\tlocalStorage.setItem('languageData', JSON.stringify(localeContent));\n\t\t} else {\n\t\t\tlet localeContent = localStorage.getItem('languageData');\n\t\t\tif (localeContent) {\n\t\t\t\tlocaleContent = JSON.parse(localeContent);\n\t\t\t\tthis.locale.localeContent = localeContent;\n\t\t\t}\n\t\t\tcanReload = true;\n\t\t\tthis.snackBar.open('You are offline', '', {\n\t\t\t\tduration: 172800000,\n\t\t\t\thorizontalPosition: 'center',\n\t\t\t\tverticalPosition: 'top'\n\t\t\t});\n\t\t}\n\t\taddEventListener('online', async () => {\n\t\t\t// if (canReload) {\n\t\t\tthis.snackBar.dismiss();\n\t\t\tif (!isDevMode() && ([null, undefined].includes(this.configuration) || [null, undefined].includes(this.locale))) {\n\t\t\t\twindow.location.reload();\n\t\t\t}\n\t\t\t// }\n\t\t});\n\t}\n\n\tprivate async loadFile(file: string): Promise<any> {\n\t\treturn this.http.get(file).toPromise();\n\t}\n\n\tprivate async setSessionUser() {\n\t\ttry {\n\t\t\tconst apiData = {};\n\t\t\tconst headers: any = {};\n\t\t\tconst response = await this.loadUser(apiData, headers);\n\t\t\tthis.sessionUser = response;\n\t\t\tthis.sessionUser.name = `${this.sessionUser.profile.firstName}${this.sessionUser.profile.lastName\n\t\t\t\t? ' ' + this.sessionUser.profile.lastName\n\t\t\t\t: ''}`;\n\t\t\tthis.sessionUser.lastLoginTime = null;\n\t\t\t// this.sessionUser = { name: 'test', userID: 1, firstName: 'test', lastName: 'test' };\n\t\t} catch (error) {\n\n\t\t}\n\n\t}\n\n\tprivate loadUser(params: any = {}, headers: any = {}): Promise<any> {\n\t\tconst token = this.getCookie('token');\n\t\tif (token) {\n\t\t\theaders.token = token;\n\t\t}\n\t\t// headers = this.JSONMerge(headers, this.headers);\n\t\tconst api = this.configuration.API_URL + '' + this.configuration.API_PREFIX + `authentication/usersessiondetails`;\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders(headers),\n\t\t\tparams\n\t\t};\n\t\treturn this.http.get(api, options).toPromise();\n\t}\n\n\tprivate getCookie(name: string) {\n\t\ttry {\n\t\t\tconst ca: Array<string> = decodeURIComponent(document.cookie).split(';');\n\t\t\tconst caLen: number = ca.length;\n\t\t\tconst cookieName = `${name}=`;\n\t\t\tlet c: string;\n\t\t\tfor (let i = 0; i < caLen; i += 1) {\n\t\t\t\tc = ca[i].replace(/^\\s+/g, '');\n\t\t\t\tif (c.indexOf(cookieName) === 0) {\n\t\t\t\t\tconst returnData = c.substring(cookieName.length, c.length);\n\t\t\t\t\tif (returnData) {\n\t\t\t\t\t\tif (this.isJson(returnData)) {\n\t\t\t\t\t\t\treturn JSON.parse(returnData);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn returnData;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate isJson(item) {\n\t\titem = typeof item !== 'string' ? JSON.stringify(item) : item;\n\t\ttry {\n\t\t\titem = JSON.parse(item);\n\t\t} catch (e) {\n\t\t\t// console.error(e);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}